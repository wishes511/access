/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package origen;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author GATEWAY1-
 */
public class Importarexcel extends javax.swing.JFrame {

    JFileChooser filechooser = new JFileChooser();
    JFileChooser filechooser2 = new JFileChooser();
    Connection sqlite;
    String rutaaccess="";
    /**
     * Creates new form EtiqAndrea
     */
    public Importarexcel() {
        super("Conversor de Archivo de andrea a Excel");
        initComponents();
        this.setLocationRelativeTo(null);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Excel", "xlsx");
        filechooser.setFileFilter(filtro);
        FileNameExtensionFilter filtro2 = new FileNameExtensionFilter("Base de datos Access", "accdb");
        filechooser2.setFileFilter(filtro2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        archivo = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jButton1.setText("read");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        archivo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        archivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(archivo, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(jButton1)
                .addGap(87, 87, 87)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnval = filechooser.showOpenDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION) {

            File file = filechooser.getSelectedFile();
            archivo.setText(file.getAbsolutePath());
            FileReader fr = null;
            BufferedReader br = null;
            try {
                // Apertura del fichero y creacion de BufferedReader para poder
                // hacer una lectura comoda (disponer del metodo readLine()).
                fr = new FileReader(file);
                br = new BufferedReader(fr);
                // Leemos el libro de trabajo de Excel formato OOXML
                FileInputStream fac = new FileInputStream(new File(file.getAbsolutePath()));

                Workbook workbook = new XSSFWorkbook(fac);
                Sheet hoja = workbook.getSheetAt(0);
                ArrayList<String> data = new ArrayList<>();
//Recorremos las filas del documento
                Iterator rows = hoja.rowIterator();
                DataFormatter formatter = new DataFormatter();
                while (rows.hasNext()) {
                    Row row = (Row) rows.next();
                    Iterator cells = row.cellIterator();
                    System.out.println("");
                    int i = 0;
                    while (cells.hasNext()) {
                        Cell cell = (Cell) cells.next();
                        String contenidoCelda = formatter.formatCellValue(cell);
                        data.add(contenidoCelda);
                        // System.out.print(i+"-"+contenidoCelda+" ");
                        i++;
                    }
                }
                for (int i = 0; i < data.size(); i++) {
                    System.out.println(data.get(i));
                }

                // titulos de columnas
                JOptionPane.showMessageDialog(null, "Proceso Completo!", "Athletic", JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Importarexcel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Importarexcel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        conexionaccess a = new conexionaccess();
        Connection c;
        try {
//        c=a.getConnection();
//        a.insertardato(c);
//        a.Desconexion();
            File f = new File("acess.db");
            if (!f.exists()) {
                FileWriter fichero = null;
                fichero = new FileWriter(f);
                PrintWriter pw = new PrintWriter(fichero);
                fichero.close();
                conexionlite con = new conexionlite();
                sqlite = con.getconexionC(f.getAbsolutePath());
                int returnval = filechooser2.showOpenDialog(this);
                if (returnval == JFileChooser.APPROVE_OPTION) {
                    File file = filechooser2.getSelectedFile();
                    String ruta=file.getAbsolutePath();
                    con.setbd(sqlite, ruta);
                    rutaaccess=ruta;
                }
            } else {
                conexionlite con = new conexionlite();
                sqlite = con.getconexionC(f.getAbsolutePath());
                String resp=con.getbd(sqlite);
                if(resp.equals("")){
                    JOptionPane.showMessageDialog(null, "CONEXION ERRONEA");
                }else{
                    conexionaccess cona= new conexionaccess();
                    Connection acdb=cona.getConnection();
                    cona.insertardato(acdb);
                }
                
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private String cadena(String linea, int index) {
        String cadenas = "";
        for (int i = index + 1; i < linea.length(); i++) {

            if (linea.charAt(i) == ' ' || linea.charAt(i) == '.' || (linea.charAt(i) == '/') || (linea.charAt(i) == '-')) {
                cadenas += linea.charAt(i);
            } else if (verificaexpresion(linea.charAt(i) + "")) {
                i = linea.length();
            } else {
                cadenas += linea.charAt(i);
            }
        }
//        System.out.println(cadenas);
        return cadenas;
    }

    public boolean verificaexpresion(String cad) {
        boolean resp = false;
        String patt = "[0-9A-Za-z/-]*";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (!match.matches()) {
            resp = true;
        }
        return resp;
    }

    public boolean verificanumeros(String cad) {
        boolean resp = false;
        String patt = "[0-9]*";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (!match.matches()) {
            resp = true;
        }
        return resp;
    }

    public void resp() {
        Map<String, Object[]> datos = new TreeMap<String, Object[]>();
//                int contador =0;
//                fila = pagina.createRow(0);
//                while ((linea = br.readLine()) != null) {
//                    System.out.println(linea);
//                    if(contador==2){
//                        Cell celda = fila.createCell(contador);
//                        
//                    }
//                }
    }

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Importarexcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Importarexcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Importarexcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Importarexcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Importarexcel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel archivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}

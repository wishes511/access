/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etiquetaandrea;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author GATEWAY1-
 */
public class EtiqAndrea1 extends javax.swing.JFrame {

    JFileChooser filechooser = new JFileChooser();

    /**
     * Creates new form EtiqAndrea
     */
    public EtiqAndrea1() {
        super("Archivo de andrea sin Excel");
        initComponents();
        this.setLocationRelativeTo(null);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Zebra Label", "ZPL");
        filechooser.setFileFilter(filtro);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        archivo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(96, 70, 246));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Seleccione archivo ZPL (Archivo descargado de andrea)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        archivo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        archivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(archivo, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jButton1)
                .addGap(31, 31, 31)
                .addComponent(archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnval = filechooser.showOpenDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION) {
            File file = filechooser.getSelectedFile();
            archivo.setText(file.getAbsolutePath());
            File archivos = new File("Etiq.zpl");
            FileReader fr = null;
            BufferedReader br = null;
            try {
                // Apertura del fichero y creacion de BufferedReader para poder
                // hacer una lectura comoda (disponer del metodo readLine()).
                fr = new FileReader(file);
                br = new BufferedReader(fr);
                int contador = 1;
                String linea;
                String val = "";
                
                while ((linea = br.readLine()) != null) {
                    String a = "";
                    if (linea.length() > 16) {// filtro para descartar las lineas innecesarias
                        for (int i = 0; i < linea.length(); i++) {// ciclo para identificar si hay algo usable en la linea
                            a += linea.charAt(i) + "";
                            if (verificaexpresion(a)) {
                                val += a;
                                a = "";
                            } else if (a.equals("FO")) {// si encuentra un token FO tomara el siguiente valor
                                a = "";
                                String aux = cadena1(linea, i);
                                int aux2 = cambionumero(Integer.parseInt(aux));
                                if (aux2 == 100) {
                                    val += "FO" + aux2 + ",55";
                                    i += aux.length() + 3;
                                } else {
                                    val += "FO" + aux2;
                                    i += aux.length();
                                }
                            } else if (a.equals("FS")) {
                                val += "FS";
                            } else if (a.equals("TipoEtiqueta")) {
                                val += "TipoEtiqueta*=Largas";
                                i = linea.length();
                                a = "";
                            } else if (a.equals("CantidadEtiqueta")) {
                                i = linea.length();
                                int total = 0;
                                a="";
                                for (int j = 19; j < linea.length(); j++) {
                                    a += linea.charAt(j) + "";
//                                    System.out.println(linea.charAt(j));
                                    if (verificanumeros(a)) {
                                        a="";
                                    } else {
                                        total += Integer.parseInt(a);
                                    }
                                }
                                val += "CantidadEtiqueta*=" + a;
                                i=linea.length();
                                br.skip(1);
                                contador=2;
                            }
                        }
                    } else {
                        val += linea;
                    }
                    if(contador<2){
                        val += "\r\n";
                    }
                    
                }
                System.out.println(val);

                //ciclo para imprimir datos guardados en la lista hacia el excel
                FileWriter fichero = new FileWriter(archivos);
                PrintWriter pw = new PrintWriter(fichero);
                pw.println(val);
                fichero.close();
                JOptionPane.showMessageDialog(null, "Proceso Completo!", "Athletic", JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(EtiqAndrea1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(EtiqAndrea1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private int cambionumero(int v) {
        switch (v) {
            case 44:
                v = 100;
                break;
            case 75:
                v = 111;
                break;
            case 356:
                v = 436;
                break;
            case 496:
                v = 576;
                break;
            case 360:
                v = 430;
                break;
            case 370:
                v = 420;
                break;
            case 460:
                v = 510;
                break;
            case 550:
                v = 600;
                break;
            case 640:
                v = 670;
                break;
            case 365:
                v = 415;
                break;
            case 455:
                v = 505;
                break;
            case 545:
                v = 585;
                break;
            case 635:
                v = 665;
                break;
            case 445:
                v = 650;
                break;
            case 535:
                v = 485;
                break;
            case 625:
                v = 575;
                break;
            default:
                break;
        }
        return v;
    }

    private String cadena(String linea, int index) {
        String cadenas = "";
        for (int i = index + 1; i < linea.length(); i++) {

            if (linea.charAt(i) == ' ' || linea.charAt(i) == '.' || (linea.charAt(i) == '/') || (linea.charAt(i) == '-')) {
                cadenas += linea.charAt(i);
            } else if (verificaexpresion(linea.charAt(i) + "")) {
                i = linea.length();
            } else {
                cadenas += linea.charAt(i);
            }
        }
//        System.out.println(cadenas);
        return cadenas;
    }

    private String cadena1(String linea, int index) {
        String cadenas = "";
        for (int i = index + 1; i < linea.length(); i++) {
            String a = linea.charAt(i) + "";
            if (verificanumeros(a + "")) {
                i = linea.length();
            } else {
                cadenas += linea.charAt(i);
            }
        }
//        System.out.println(cadenas);
        return cadenas;
    }

    public boolean verificaexpresion(String cad) {
        boolean resp = false;
        String patt = "[0-9A-Za-z/-]*";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (!match.matches()) {
            resp = true;
        }
        return resp;
    }

    public boolean verificanumeros(String cad) {
        boolean resp = false;
        String patt = "[0-9]*";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (!match.matches()) {
            resp = true;
        }
        return resp;
    }

    public void resp() {
        Map<String, Object[]> datos = new TreeMap<String, Object[]>();
//                int contador =0;
//                fila = pagina.createRow(0);
//                while ((linea = br.readLine()) != null) {
//                    System.out.println(linea);
//                    if(contador==2){
//                        Cell celda = fila.createCell(contador);
//                        
//                    }
//                }
    }

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EtiqAndrea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EtiqAndrea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EtiqAndrea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EtiqAndrea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EtiqAndrea1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel archivo;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
